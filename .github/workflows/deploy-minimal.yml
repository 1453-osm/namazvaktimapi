name: Deploy Minimal to Cloud Run

on:
  workflow_dispatch:

env:
  PROJECT_ID: namazvaktimapi-1453
  REGION: us-east1
  SERVICE_NAME: namazvaktimapi-minimal

jobs:
  deploy:
    name: Deploy Minimal to Cloud Run
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: 'auth'
        name: 'Google Cloud kimlik doğrulaması'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker to use gcloud credentials
        run: gcloud auth configure-docker --quiet

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.minimal
          push: true
          tags: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to Cloud Run
        id: deploy
        run: |
          # Servis hesabı bilgilerini log'a yaz
          SERVICE_ACCOUNT_EMAIL=$(gcloud config get-value account)
          echo "Kullanılan servis hesabı: $SERVICE_ACCOUNT_EMAIL"
          
          # Compute hesabı olmadan deployment
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --memory 256Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 1 \
            --allow-unauthenticated \
            --set-env-vars="NODE_ENV=production" \
            --ingress=all \
            --port=8080 \
            --timeout=60s \
            --quiet
      
      - name: Show URL
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --platform managed --region ${{ env.REGION }} --format 'value(status.url)')
          echo "Servis URL: $SERVICE_URL" 
name: Deploy to Cloud Run

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: namazvakti-api
  REGION: europe-west1
  REPOSITORY: namazvakti-repo
  LOCATION: europe-west1

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
          
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: "beta"

      # Artifact Registry işlemleri için hazırlık
      - name: Enable needed APIs
        run: |
          gcloud services enable artifactregistry.googleapis.com
          gcloud services enable run.googleapis.com

      # Artifact Registry repository oluşturma (yoksa)
      - name: Create Artifact Registry Repository
        run: |
          if ! gcloud artifacts repositories describe $REPOSITORY --location=$LOCATION; then
            gcloud artifacts repositories create $REPOSITORY --repository-format=docker --location=$LOCATION
          fi

      # Docker kimlik doğrulaması
      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker $LOCATION-docker.pkg.dev --quiet

      # İmajı oluştur ve gönder
      - name: Build and push container
        run: |
          docker build -t $LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:${{ github.sha }} .
          docker push $LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:${{ github.sha }}

      # Cloud Run'a deploy et
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$SERVICE_NAME:${{ github.sha }} \
            --platform managed \
            --region $REGION \
            --allow-unauthenticated \
            --set-env-vars="NODE_ENV=production" \
            --set-secrets="TURSO_DATABASE_URL=turso-database-url:latest,TURSO_AUTH_TOKEN=turso-auth-token:latest" \
            --memory 256Mi \
            --cpu 1 \
            --min-instances=0 \
            --max-instances=10 \
            --concurrency=80 \
            --timeout=300s \
            --verbosity=debug

      - name: Show deployed URL
        run: gcloud run services describe $SERVICE_NAME --region $REGION --format 'value(status.url)' 